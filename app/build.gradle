apply plugin: 'com.android.application'
apply plugin: 'org.greenrobot.greendao'

android {
    compileSdkVersion 26
    buildToolsVersion '28.0.3'
    useLibrary 'org.apache.http.legacy'
    defaultConfig {
        applicationId "com.example.administrator.newsdf"
        minSdkVersion 14
        targetSdkVersion 26
        versionCode 1
        versionName "2.9"
        resConfigs "zh-rCN"
        multiDexEnabled true
        ndk {
            //选择要添加的对应cpu类型的.so库。
            abiFilters 'armeabi', 'armeabi-v7a', 'armeabi-v8a', 'x86', 'x86_64','arm64-v8a'
        }
        manifestPlaceholders = [
                JPUSH_PKGNAME: applicationId,
                //极光推送
                JPUSH_APPKEY : "f050fc1f161dd2f848ac1f58",
                JPUSH_CHANNEL: "developer-default",
        ]

    }

    //greendao配置
    greendao {
        //版本号，升级时可配置
        schemaVersion 1
    }
    //添加如下配置就ok了
    lintOptions {
        checkReleaseBuilds false
        abortOnError false

    }

    buildTypes {
        debug {
            //显示日志
            buildConfigField("boolean", "LOG_DEBUG", "true");
            debuggable true
            shrinkResources false
            zipAlignEnabled true
            minifyEnabled false

        }
        release {
            // 不显示Log
            buildConfigField "boolean", "LOG_DEBUG", "false"
            //Zipalign优化
            zipAlignEnabled false
            minifyEnabled false
            //proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
            //前一部分代表系统默认的android程序的混淆文件，该文件已经包含了基本的混淆声明，后一个文件是自己的定义混淆文件
            //      proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'//默认不优化
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
            //optimize 默认优化就是这两个文件的区别
        }
    }
    sourceSets {
        main {
            jniLibs.srcDirs = ['libs']
        }
    }

    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }

}

dependencies {
    implementation 'com.android.support.constraint:constraint-layout:1.1.3'
    api files('libs/BaiduLBS_Android.jar')
    implementation project(':baselibrary')
    //饼图
    implementation 'com.github.PhilJay:MPAndroidChart:v3.0.3'
    def nav_version = '1.0.0-alpha01'
    def lifecycle = '1.1.1'
    //navigation
    //noinspection GradleDependency
    implementation "android.arch.navigation:navigation-fragment:$nav_version"
    //noinspection GradleDependency
    implementation "android.arch.navigation:navigation-ui:$nav_version"
    // alternatively, just LiveData
    implementation "android.arch.lifecycle:livedata:$lifecycle"
    implementation "android.arch.lifecycle:extensions:$lifecycle"

}